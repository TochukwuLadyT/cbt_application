/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package EXAM_PAGE;

import jamb_secondary_general_cbt_connectivity.cconnection;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import javaswingdev.Notification;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author LADYT
 */
public class exam_login extends javax.swing.JFrame {
    Date date = new Date();    

    /**
     * Creates new form write_exam
     */
    public exam_login() {
         
        initComponents();
       jLabel7.setText(date.toLocaleString());
          Dimension myscreen = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(myscreen.width, myscreen.height);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);

        jButton1.requestFocus();
         jDateChooser1.setDate(date);
        load_logo();
      jDateChooser1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jDateChooser1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jDateChooser1KeyReleased(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GRAFIL COMPUTERS CBT_EXAM_SUITE");
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel1MouseMoved(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 0));
        jButton1.setText("PROCEED");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 590, -1, 30));

        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 170, 220, 32));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setText("Exam ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 102, 0));
        jLabel6.setText("WELCOME TO");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 153));
        jLabel5.setText("TALENT QUIZ COMPETITION");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, 360, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 100, 240, 34));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/menu.png"))); // NOI18N
        jLabel1.setText("SCHOOL LOGO");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 200, 90));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MAIN8.jpeg"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 780, 330));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1280, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
        String exam_id = jTextField1.getText();
        String login_time= jLabel7.getText();
        
          String exam_date = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
        if (exam_id.length() > 0) {
            
            try {
            cconnection cconnection = new cconnection();
                try (Connection conn = cconnection.getConnection()) {
                    Statement stati = conn.createStatement();
                    String sele = "SELECT * From candidates;";
                    ResultSet rems = stati.executeQuery(sele);
                    while(rems.next()){
                        String can = rems.getString("candidate_id");
                        String status = rems.getString("status");
                        if((can.compareTo(exam_id)==0 && status.equals("General"))){
                            String sv = "INSERT into login_candidates values('" + exam_id + "','','','','0','" +login_time+"','writing','','','','','"+exam_date+"');";
                            stati.executeUpdate(sv);
                            String svs = "INSERT into selected_answers values('question_no','option','subject_selected','"+exam_id+"');";
                            stati.executeUpdate(svs);
                            setVisible(false);
                            new exam_instructions(exam_id).setVisible(true);
                        }
                        if((can.compareTo(exam_id)==0 && status.equals("Jamb"))){
                            String svg = "INSERT into login_candidates_subjects values('" + exam_id + "','','','','0','0','0','0','0','" +login_time+"','writing','','','','','"+exam_date+"');";
                            stati.executeUpdate(svg);
                            String svs = "INSERT into selected_answers values('question_no','option','subject_selected','"+exam_id+"');";
                            stati.executeUpdate(svs);
                            
                            String svlg = "INSERT into login_candidates_final_result values('" + exam_id + "','','','','','','','','','"+exam_date+"');";
                            stati.executeUpdate(svlg);
                            
                            setVisible(false);
                          //  new exam_instructions(exam_id).setVisible(true);
                            new exam_instructions(exam_id).setVisible(true);
                        }
                        // ADD STATUS JUNIOR OR SENIOR FROM CANDIDATES
                            if((can.compareTo(exam_id)==0)){
                            String svg = "INSERT into login_candidates_secondary values('" + exam_id + "','','','','0','0','0','0','0','0','zone','status','" +login_time+"','writing_status','','','','','"+exam_date+"');";
                            stati.executeUpdate(svg);
                            String svs = "INSERT into selected_answers values('question_no','option','subject_selected','"+exam_id+"');";
                            stati.executeUpdate(svs);
                            
                            String svlg = "INSERT into login_candidates_secondary_result values('" + exam_id + "','','','','','','','','','','zone','status','"+exam_date+"');";
                            stati.executeUpdate(svlg);
                            
                            setVisible(false);
                          //  new exam_instructions(exam_id).setVisible(true);
                            new exam_instructions(exam_id).setVisible(true);
                        }
                    }
                    
                     Notification panel = new Notification(this, Notification.Type.INFO, Notification.Location.TOP_RIGHT, "Examination ID didn't match");
                panel.showNotification();
                }
              
               
            } catch (Exception ex) {
             ex.printStackTrace();
                 
            }
             
         } else {
                Notification panel = new Notification(this, Notification.Type.INFO, Notification.Location.TOP_RIGHT, "Type Examination ID");
                panel.showNotification();               
                }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
         if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        String exam_id = jTextField1.getText();
        String login_time= jLabel7.getText();
        String exam_date = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
        
        if (exam_id.length() > 0) {
            
            try {
            cconnection cconnection = new cconnection();
            Connection conn = cconnection.getConnection();
                Statement stati = conn.createStatement();
                String sele = "SELECT * From candidates;";
                ResultSet rems = stati.executeQuery(sele);
                    while(rems.next()){
                String can = rems.getString("candidate_id");
                String status = rems.getString("status");
                    if((can.compareTo(exam_id)==0 && status.equals("General"))){    
                    String sv = "INSERT into login_candidates values('" + exam_id + "','','','','0','" +login_time+"','writing','','','','','"+exam_date+"');";
                            stati.executeUpdate(sv);
                    String svs = "INSERT into selected_answers values('question_no','option','subject_selected','"+exam_id+"');";
                    stati.executeUpdate(svs);
                     setVisible(false);
                    new exam_instructions(exam_id).setVisible(true);
                    }
                    if((can.compareTo(exam_id)==0 && status.equals("Choices"))){
                       String svg = "INSERT into login_candidates_subjects values('" + exam_id + "','','','','','','','','','','','','','" +login_time+"','writing','','','','','"+exam_date+"');";
                            stati.executeUpdate(svg);
                            
                        String svs = "INSERT into selected_answers values('question_no','option','subject_selected','"+exam_id+"');";
                        stati.executeUpdate(svs);
                        
                           String svlg = "INSERT into login_candidates_final_result values('" + exam_id + "','','','','','','','','','"+exam_date+"');";
                            stati.executeUpdate(svlg);

                              setVisible(false);
                    new exam_instructions(exam_id).setVisible(true);        
                    } 
                    }          
                conn.close();
     
            } catch (Exception ex) {
             ex.printStackTrace();
           
               // JOptionPane.showMessageDialog(null, "Dear Candidate you have lost connection", "Info", JOptionPane.ERROR_MESSAGE);
            }
            
         } else {
              Notification panel = new Notification(this, Notification.Type.INFO, Notification.Location.TOP_RIGHT, "Type Examination ID");
                panel.showNotification();                 
                }
          
        try{
     
       InetAddress myIP = InetAddress.getLocalHost();
        System.out.println(myIP);      
        String sysname = myIP.getHostName();
        String sysip= myIP.getHostAddress();
     
      
           try { 
            cconnection cconnection = new cconnection();
            Connection conn = cconnection.getConnection();
                Statement stati = conn.createStatement();
                
                String sv = "INSERT into login_systems values('" + sysname + "','" +sysip+"','connected');";
                stati.executeUpdate(sv);          
               
            } catch (Exception ex) {
             ex.printStackTrace();
               // JOptionPane.showMessageDialog(null, "Dear Candidate you have lost connection", "Info", JOptionPane.ERROR_MESSAGE);
            }
        
        
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
            
     }
    
    }//GEN-LAST:event_jButton1KeyPressed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        int position = jTextField1.getCaretPosition();
        jTextField1.setText(jTextField1.getText().toUpperCase());
        jTextField1.setCaretPosition(position);
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String exam_id = jTextField1.getText();
            String login_time= jLabel7.getText();

            if (exam_id.length() > 0) {

                try {
                    cconnection cconnection = new cconnection();
                    Connection conn = cconnection.getConnection();
                    Statement stati = conn.createStatement();
                    String sele = "SELECT * From candidates;";
                    ResultSet rems = stati.executeQuery(sele);
                    while(rems.next()){
                        String can = rems.getString("candidate_id");
                        if((can.compareTo(exam_id)==0)){
                            String sv = "INSERT into login_candidates values('" + exam_id + "','','','','0','" +login_time+"','writing','','','','');";
                            stati.executeUpdate(sv);
                             String svs = "INSERT into selected_answers values('question_no','option','subject_selected','"+exam_id+"');";
                        stati.executeUpdate(svs);

                            setVisible(false);
                            new exam_instructions(exam_id).setVisible(true);

                        }else{

                        }
                    }
                    conn.close();

                } catch (Exception ex) {
                    ex.printStackTrace();
                    // JOptionPane.showMessageDialog(null, "Dear Candidate you have lost connection", "Info", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Enter Your ID", "Error", JOptionPane.ERROR_MESSAGE);
            }

            try{

                InetAddress myIP = InetAddress.getLocalHost();
                System.out.println(myIP);
                String sysname = myIP.getHostName();
                String sysip= myIP.getHostAddress();

                try {
                    cconnection cconnection = new cconnection();
                    Connection conn = cconnection.getConnection();
                    Statement stati = conn.createStatement();

                    String sv = "INSERT into login_systems values('" + sysname + "','" +sysip+"','connected');";
                    stati.executeUpdate(sv);

                } catch (Exception ex) {
                    ex.printStackTrace();
                    // JOptionPane.showMessageDialog(null, "Dear Candidate you have lost connection", "Info", JOptionPane.ERROR_MESSAGE);
                }

            }catch(Exception ex){
                System.out.println(ex.getMessage());
            }

        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1FocusGained

    private void jDateChooser1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser1KeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_jDateChooser1KeyReleased

    private void jPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseMoved
        // TODO add your handling code here:
        Cursor curl = new Cursor(Cursor.HAND_CURSOR);
        jButton1.setCursor(curl);
    }//GEN-LAST:event_jPanel1MouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(exam_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(exam_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(exam_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(exam_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new exam_login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void load_logo() {
           setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("menu.png")));
    }
} 
